// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: orders.sql

package dbal

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders (id, userid, price, quantity, created_at, updated_at)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, userid, price, quantity, created_at, updated_at
`

type CreateOrderParams struct {
	ID        uuid.UUID
	Userid    string
	Price     float64
	Quantity  int32
	CreatedAt time.Time
	UpdatedAt time.Time
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error) {
	row := q.db.QueryRowContext(ctx, createOrder,
		arg.ID,
		arg.Userid,
		arg.Price,
		arg.Quantity,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Order
	err := row.Scan(
		&i.ID,
		&i.Userid,
		&i.Price,
		&i.Quantity,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
